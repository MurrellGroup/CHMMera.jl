var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [CHMMera]","category":"page"},{"location":"api/#CHMMera.get_chimera_probabilities-Tuple{Vector{String}, Vector{String}}","page":"API","title":"CHMMera.get_chimera_probabilities","text":"get_chimera_probabilities(queries::Vector{String}, references::Vector{String}, bw::Bool = true, mutation_probabilities::Vector{Float64} = [0.0047, 0.01, 0.05, 0.1, 0.15, 0.2], base_mutation_probability::Float64 = 0.05, prior_probability::Float64 = 0.02\n\nCompute the probability of a sequence being chimeric for each query sequence given a list of reference sequences.\n\nArguments\n\nqueries::Vector{String}: A vector of query sequences.\nreferences::Vector{String}: A vector of reference sequences.\nbw::Bool = true: A boolean indicating whether to use the Baum-Welch or the Discretized Bayesian approach.\nmutation_probabilities::Vector{Float64} = [0.0047, 0.01, 0.05, 0.1, 0.15, 0.2]: A vector of mutation probabilities.\nbase_mutation_probability::Float64 = 0.05: The base mutation probability. Used as starting point for Baum-Welch.\nprior_probability::Float64 = 0.02: The prior probability of a sequence being chimeric.\n\n\n\n\n\n","category":"method"},{"location":"api/#CHMMera.get_recombination_events-Tuple{Vector{String}, Vector{String}}","page":"API","title":"CHMMera.get_recombination_events","text":"get_recombination_events(queries::Vector{String}, references::Vector{String}, bw::Bool = true, mutation_probabilities::Vector{Float64} = [0.0047, 0.01, 0.05, 0.1, 0.15, 0.2], base_mutation_probability::Float64 = 0.05, prior_probability::Float64 = 0.02, detailed::Bool = false)\n\nCompute the recombination events for a query sequence given a set of reference sequences.\n\nThe return type is a vector of RecombinationEvents (plural because one query can have multiple recombination events). In RecombinationEvents, recombinations is a vector of RecombinationEvents, each of which contains position, left, right, left_state, and right_state (Since FullHMMs have multiple states per reference). startingpoint is the starting point of viterbi path, pathevaluation is the probability of the second most probable reference, and logsiteprobabilities is the log probability of being at each site in the query sequence (forward * backward). If the argument detailed is false, only recombinations is computed.\n\nArguments\n\nqueries::Vector{String}: A vector of query sequences.\nreferences::Vector{String}: A vector of reference sequences.\nbw::Bool = true: A boolean indicating whether to use the Baum-Welch or the Discretized Bayesian approach.\nmutation_probabilities::Vector{Float64} = [0.0047, 0.01, 0.05, 0.1, 0.15, 0.2]: A vector of mutation probabilities.\nbase_mutation_probability::Float64 = 0.05: The base mutation probability. Used as starting point for Baum-Welch.\nprior_probability::Float64 = 0.02: The prior probability of a sequence being chimeric.\ndetailed::Bool = false: A boolean indicating whether to calculate pathevaluation and logsiteprobabilities.\n\n\n\n\n\n","category":"method"},{"location":"#CHMMera.jl","page":"Overview","title":"CHMMera.jl","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"(Image: MIT license) (Image: Coverage)","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"CHMMera.jl is a method for reference-based detection of chimeric DNA sequences.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Chimera detection is performed using a Hidden Markov Model (HMM) that models sequences as being generated from a single reference with mutations or from multiple references with mutations. We implemented two approaches to determine mutation rates:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Discretizing mutation rates by creating a state for each mutation rate + template combination, called the Discretized Bayesian (DB) approach.\nEstimating a continuous per-reference mutation rate using the Baum-Welch (BW) algorithm.","category":"page"},{"location":"#Example-usage","page":"Overview","title":"Example usage","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"julia> using CHMMera\n\njulia> refs = [\"ACGTACGTACGT\", \"ACCACCACCAAT\"]\n\njulia> queries = [\"ACGTACACCAAT\", \"ACCACCACCAGT\"]\n\njulia> get_chimera_probabilities(queries, refs)\n2-element Vector{Float64}:\n 0.9956728308121604\n 0.05863188730424695\n\njulia> get_recombination_events(queries, refs; detailed = false)\n2-element Vector{RecombinationEvents}:\n (recombinations = RecombinationEvent[(position = 7, left = 1, right = 2, left_state = 1, right_state = 2)], startingpoint = 1)\n (recombinations = RecombinationEvent[], startingpoint = 2)\n\njulia> get_recombination_events(queries, refs; detailed = true)\n2-element Vector{DetailedRecombinationEvents}:\n (recombinations = RecombinationEvent[(position = 7, left = 1, right = 2, left_state = 1, right_state = 2)], startingpoint = 1, pathevaluation = 0.995612088796054, logsiteprobabilities = [-0.007751384549707252, -0.006081763823303499, -0.00439756634058619, -0.00464963436088528, -0.01670468631375581, -0.7003603824992484, -4.360877076008885, -0.0003315532714940339, -1.1770957131840287e-5, -4.643262233303136e-6, -4.698595592046717e-5, -0.0017033680895343628])\n (recombinations = RecombinationEvent[], startingpoint = 2, pathevaluation = -Inf, logsiteprobabilities = Float64[])","category":"page"}]
}
